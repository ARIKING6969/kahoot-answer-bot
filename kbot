#!/usr/bin/env python3
import argparse

import klib
import re


def nameOrID():
	while "the answer is invalid":
		reply = str(input("quizName or quizID? [n/i] > ")).lower().strip()
		if reply[:1] == 'n':
			return True
		if reply[:1] == 'i':
			return False


def checkID(id):
	res = re.search(r"(([a-zA-Z0-9]){8}(-([a-zA-Z0-9]){4}){3}-([a-zA-Z0-9]){12})", id)
	if not res:
		print('Invalid UUID. It must take the form x8-x4-x4-x4-x12, where x8 means 8 alphanumeric characters')
		exit()
	return res.group(1)


if __name__ == "__main__":
	parser = argparse.ArgumentParser()
	parser.add_argument('-e', "--email", help="The email used to login to create.kahoot.it")
	parser.add_argument('-a', "--password", help="The corresponding password used to login to create.kahoot.it")
	parser.add_argument('-n', "--nick", help="The nickname to join the Kahoot with")
	parser.add_argument('-p', "--pin", help="The game pin")
	parser.add_argument('-q', "--quizName", help="The quiz's name")
	parser.add_argument('-i', "--quizID", help="The quiz's ID")
	parser.add_argument('-m', "--maxCount", help="How many quizzes to look for when searching by name")
	parser.add_argument('-d', "--debug", help="Debug mode on")
	args = parser.parse_args()
	email = args.email
	password = args.password
	nickname = args.nick
	pin = args.pin
	quizID = args.quizName
	quizName = args.quizID
	maxCount = args.maxCount
	debug = args.debug

	try:
		if not nickname:
			nickname = input('name > ')
		if not pin:
			pin = input('pin > ')
		if quizID:
			user = klib.Kahoot(pin, nickname, quizID=checkID(quizID), DEBUG=debug)
		elif quizName:
			if email and password:
				user = klib.Kahoot(pin, nickname, quizName=quizName, maxCount=maxCount, DEBUG=debug)
			else:
				print('Authentication required when searching for quizzes by name')
				exit()
		else:
			if email and password:
				if nameOrID():
					quizName = input('quizName > ')
					user = klib.Kahoot(pin, nickname, quizName=quizName, maxCount=maxCount, DEBUG=debug)
				else:
					quizID = input('quizID > ')
					validID = re.search(r"^([a-zA-Z0-9]){8}(-([a-zA-Z0-9]){4}){3}-([a-zA-Z0-9]){12}$", quizID)
					user = klib.Kahoot(pin, nickname, quizID=checkID(quizID), DEBUG=debug)
			else:
				quizID = input('quizID > ')
				user = klib.Kahoot(pin, nickname, quizID=quizID, DEBUG=debug)
		if email and password:
			user.authenticate(email, password)
		user.checkPin()
		user.startGame()
	except KeyboardInterrupt:
		print('EXITING...')
		exit()
